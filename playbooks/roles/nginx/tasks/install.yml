- name: mkdir /apps/nginx
  file: 
    name: "{{ pkg_path }}"
    state: directory

- shell: "[ -f {{ pkg_path }}/nginx-{{ nginx_version }}.tar.gz ] || echo 'failed'"
  register: nginx_pkg_check

- name: copy nginx package
  copy:
    src: ../../../../files/nginx-{{ nginx_version }}.tar.gz
    dest: "{{ pkg_path }}"
  when: "'failed' in nginx_pkg_check.stdout"

- name: unarchive package
  unarchive: 
    src: "{{ pkg_path }}/nginx-{{ nginx_version }}.tar.gz"
    dest: "{{ pkg_path }}"
    copy: no 
    owner: nginx

- shell: "which nginx || echo 'failed'"
  register: app_check

- block:
  - name: make nginx
    shell: "cd {{ pkg_path }}/nginx-{{ nginx_version }} && {{ make_opt }} && make -j $(nproc) && make install"

  - name: link nginx
    file: 
      src: /apps/nginx-{{ nginx_version }} 
      dest: "{{ app_dir }}" 
      state: link 
      owner: nginx

  - name: create nginx conf directory
    file: 
      path: "{{ app_dir }}/conf/conf.d "
      state: directory 
      owner: nginx

  - name: env 
    shell: echo "PATH=\$PATH:{{ app_dir }}/sbin/" > /etc/profile.d/nginx.sh && chmod a+x /etc/profile.d/nginx.sh && source /etc/profile
    
  when: "'failed' in app_check.stdout"
