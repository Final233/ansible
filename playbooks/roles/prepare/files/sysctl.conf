# Controls whether core dumps will append the PID to the core filename.
# Useful for debugging multi-threaded applications.
kernel.core_uses_pid = 1
kernel.core_pattern = core.%e.%p.%u

# Controls the maximum size of a message, in bytes
kernel.msgmax = 65536

# Controls the default maxmimum size of a mesage queue
kernel.msgmnb = 65536

# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 4294967296

# Controls the maximum shared segment size, in bytes
kernel.shmmax = 68719476736

# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 0

kernel.panic_on_oops = 1
kernel.panic = 10

# Controls whether core dumps will append the PID to the core filename.
# Useful for debugging multi-threaded applications.
#net.ipv4.conf.default.rp_filter = 1
#net.ipv4.ip_nonlocal_bind = 1
#net.ipv4.ip_forward = 1

# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0

# Disable netfilter on bridges.
net.bridge.bridge-nf-call-ip6tables = 0
net.bridge.bridge-nf-call-iptables = 0
net.bridge.bridge-nf-call-arptables = 0

# TCP kernel paramater
# Allocate buffer size
net.ipv4.tcp_mem = 1048576 1572864 2097152
net.ipv4.tcp_rmem = 4096 8192 4194304
net.ipv4.tcp_wmem = 4096 8192 4194304
net.ipv4.udp_mem = 4096 8192 4194304
net.ipv4.udp_rmem_min = 8192

# Performance can be improved by selectively replying to messages received out of order (this allows the sender to send only the missing segments of the message)
net.ipv4.tcp_sack = 1

# Continuous transfer of large files will effectively improve help There are certain improvements to broadband
net.ipv4.tcp_window_scaling = 1

# socket buffer
# Determines the maximum number of packets allowed to be sent to the queue when the network device receives them faster than the kernel can process them
net.core.netdev_max_backlog = 262144
# Specifies the maximum buffer size allowed per socket
net.core.optmem_max = 81920
# Socket read buffer size
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
# The Backlog cap for Ocket listening
net.core.somaxconn = 32768
# Socket write buffer size
net.core.wmem_default = 8388608
net.core.wmem_max = 16777216

# TCP conn
# How many half-open connections can be kept in the queue for which the client has not yet sent an ACK response
net.ipv4.tcp_max_syn_backlog = 262144

net.ipv4.tcp_retries1 = 3
net.ipv4.tcp_retries2 = 15

# The number of SYN packets sent by the kernel before the connection is abandoned
net.ipv4.tcp_syn_retries = 3

# Tcp conn reuse
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1

# The socket is closed at the request of the local end. This parameter determines how long it remains in fin-WaIT-2 state
net.ipv4.tcp_fin_timeout = 1

# Indicates the maximum number of TIME_WAIT sockets that the system can hold simultaneously
# Prevent simple ddos attacks
net.ipv4.tcp_max_tw_buckets = 20000

# Enable the TCP timestamp
net.ipv4.tcp_timestamps = 0
#net.ipv4.tcp_timestamps = 1

# How many times does the local end try to close the TCP connection
net.ipv4.tcp_synack_retries = 1

# Enable SYN Cookies to defend against a small number of SYN attacks
net.ipv4.tcp_syncookies = 1

# keepalive conn
net.ipv4.tcp_keepalive_intvl = 30
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_time = 300

# The range of ports used to connect outward
net.ipv4.ip_local_port_range = 10001 65000

# swap
vm.nr_hugepages_mempolicy = 0
vm.overcommit_memory = 0
vm.swappiness = 10

# File handle upper limit
fs.file-max = 1000000

# The kernel process exceeded the limit
kernel.pid_max = 131072

# The maximum NUMBER of TCP socket words not attached to any user file handle, held by the system
# If this amount is exceeded, the isolated connection is reset immediately and a warning is printed
# This limit exists only to prevent simple DoS attacks, and you cannot rely on it or artificially lower the limit, but increase it
# If network conditions need to exceed default values, adjust network services to linger and terminate such states more aggressively
# Each orphan eats up to about 64K of non-swappable memory
net.ipv4.tcp_max_orphans = 3276800

#TCP will not cache metrics when closing a connection
#net.ipv4.tcp_no_metrics_save = 1

# You can enable the operating system to automatically adjust the MTU size based on network conditions, thus striking a delicate balance between performance and stability
net.ipv4.tcp_mtu_probing = 1

# Make full use of the advantages of TCP long connections to improve the network transmission rate
net.ipv4.tcp_slow_start_after_idle = 0

# We will follow RFC 1337 and discard RST packets to prevent time-wait assassinations
#net.ipv4.tcp_rfc1337 = 0

# TCP performs automatic receive buffer adjustment
net.ipv4.tcp_moderate_rcvbuf = 1

# Controls the number of microseconds that packets on the device queue are waiting for socket polling and selection
# The recommended value is 50
net.core.busy_poll = 50
net.core.busy_read = 50

#fs.nr_open = 6553600
#fs.inotify.max_user_watches = 1048576
#fs.inotify.max_queued_events = 1048576
#fs.pipe-user-pages-soft = 102400

# Configure the default congestion control algorithm
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = cubic
#net.ipv4.tcp_congestion_control = bbr
#net.ipv4.tcp_congestion_control = htcp

# Guard dogs are disabled
kernel.nmi_watchdog = 0

# Whether threads are automatically grouped and scheduled
kernel.sched_autogroup_enabled = 0

# Refresh frequency of route cache
net.ipv4.route.gc_timeout = 100

# The TCP stack behavior is set to support decisions to maximize network throughput
net.ipv4.tcp_low_latency = 1

# The size of the connection trace table
net.netfilter.nf_conntrack_max = 1000000

fs.inotify.max_user_instances = 8192
#net.ipv4.conf.all.arp_announce = 1
#net.ipv4.conf.all.arp_ignore = 1
#vm.nr_hugepages = 0
#net.ipv4.tcp_mtu_probing = 1
#vm.dirty_background_ratio = 3
#vm.dirty_ratio = 10
#vm.max_map_count=655360
#kernel.sched_migration_cost_ns = 5000000